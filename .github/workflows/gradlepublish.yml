
name: Gradle Package

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - run: ./gradlew assemble
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGES }}

    - name: Test on Vanila JDK
      run: |
        java -showversion -jar build/libs/example-0.1-all.jar &
        sleep 10
        curl localhost:8080/hello/test | grep "Hello test!"
        pkill -f build/libs/example-0.1-all.jar

    - name: Download JDK
      run: |
        id=$(curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/org-crac/jdk/releases/tags/release-crac | jq '.assets[] | select(.name == "jdk.tar.gz").id')
        curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/org-crac/jdk/releases/assets/$id -LJOH 'Accept: application/octet-stream'
        sudo tar -axf jdk.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGES }}

    - run: |
        ( jdk/bin/java -Zcheckpoint:cr -jar build/libs/example-0.1-all.jar || echo $? > exitcode) &
        sleep 10 # allow service to start
        curl localhost:8080/hello/test # "warmup" the service
        jcmd build/libs/example-0.1-all.jar JDK.checkpoint
        sleep 10 # allow checkpoint to settle
        [ 137 = $(< exitcode) ]
    - run: |
        jdk/bin/java -Zrestore:cr &
        sleep 3
        curl localhost:8080/hello/test | grep "Hello test!"
